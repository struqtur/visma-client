<?php
/**
 * InventoryAccountingTemplateApi
 *
 * PHP version 5
 *
 * @category Class
 * @package  Struqtur\VismaEAccounting
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Visma eAccounting API V2
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.41
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Struqtur\VismaEAccounting\Model;

use \ArrayAccess;
use \Struqtur\VismaEAccounting\ObjectSerializer;

/**
 * InventoryAccountingTemplateApi Class Doc Comment
 *
 * @category Class
 * @package  Struqtur\VismaEAccounting
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InventoryAccountingTemplateApi implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InventoryAccountingTemplateApi';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'active' => 'bool',
        'no_depreciations' => 'bool',
        'is_custom' => 'bool',
        'name' => 'string',
        'name_english' => 'string',
        'inventory_account_number' => 'int',
        'inventory_account_use_cost_center' => 'bool',
        'depreciation_asset_account_number' => 'int',
        'depreciation_asset_account_use_cost_center' => 'bool',
        'depreciation_result_account_number' => 'int',
        'depreciation_result_account_use_cost_center' => 'bool',
        'capital_gain_account_number' => 'int',
        'capital_gain_account_use_cost_center' => 'bool',
        'capital_loss_account_number' => 'int',
        'capital_loss_account_use_cost_center' => 'bool',
        'taxation_depreciation' => 'string',
        'appreciations_account_number' => 'int',
        'appreciation_account_use_cost_center' => 'bool',
        'accumulated_impairment_loss_account_number' => 'int',
        'accumulated_impairment_loss_account_use_cost_center' => 'bool',
        'impairment_loss_account_number' => 'int',
        'impairment_loss_account_use_cost_center' => 'bool',
        'reversal_of_impairment_account_number' => 'int',
        'reversal_of_impairment_account_use_cost_center' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'uuid',
        'active' => null,
        'no_depreciations' => null,
        'is_custom' => null,
        'name' => null,
        'name_english' => null,
        'inventory_account_number' => 'int64',
        'inventory_account_use_cost_center' => null,
        'depreciation_asset_account_number' => 'int64',
        'depreciation_asset_account_use_cost_center' => null,
        'depreciation_result_account_number' => 'int64',
        'depreciation_result_account_use_cost_center' => null,
        'capital_gain_account_number' => 'int64',
        'capital_gain_account_use_cost_center' => null,
        'capital_loss_account_number' => 'int64',
        'capital_loss_account_use_cost_center' => null,
        'taxation_depreciation' => null,
        'appreciations_account_number' => 'int64',
        'appreciation_account_use_cost_center' => null,
        'accumulated_impairment_loss_account_number' => 'int64',
        'accumulated_impairment_loss_account_use_cost_center' => null,
        'impairment_loss_account_number' => 'int64',
        'impairment_loss_account_use_cost_center' => null,
        'reversal_of_impairment_account_number' => 'int64',
        'reversal_of_impairment_account_use_cost_center' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'Id',
        'active' => 'Active',
        'no_depreciations' => 'NoDepreciations',
        'is_custom' => 'IsCustom',
        'name' => 'Name',
        'name_english' => 'NameEnglish',
        'inventory_account_number' => 'InventoryAccountNumber',
        'inventory_account_use_cost_center' => 'InventoryAccountUseCostCenter',
        'depreciation_asset_account_number' => 'DepreciationAssetAccountNumber',
        'depreciation_asset_account_use_cost_center' => 'DepreciationAssetAccountUseCostCenter',
        'depreciation_result_account_number' => 'DepreciationResultAccountNumber',
        'depreciation_result_account_use_cost_center' => 'DepreciationResultAccountUseCostCenter',
        'capital_gain_account_number' => 'CapitalGainAccountNumber',
        'capital_gain_account_use_cost_center' => 'CapitalGainAccountUseCostCenter',
        'capital_loss_account_number' => 'CapitalLossAccountNumber',
        'capital_loss_account_use_cost_center' => 'CapitalLossAccountUseCostCenter',
        'taxation_depreciation' => 'TaxationDepreciation',
        'appreciations_account_number' => 'AppreciationsAccountNumber',
        'appreciation_account_use_cost_center' => 'AppreciationAccountUseCostCenter',
        'accumulated_impairment_loss_account_number' => 'AccumulatedImpairmentLossAccountNumber',
        'accumulated_impairment_loss_account_use_cost_center' => 'AccumulatedImpairmentLossAccountUseCostCenter',
        'impairment_loss_account_number' => 'ImpairmentLossAccountNumber',
        'impairment_loss_account_use_cost_center' => 'ImpairmentLossAccountUseCostCenter',
        'reversal_of_impairment_account_number' => 'ReversalOfImpairmentAccountNumber',
        'reversal_of_impairment_account_use_cost_center' => 'ReversalOfImpairmentAccountUseCostCenter'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'active' => 'setActive',
        'no_depreciations' => 'setNoDepreciations',
        'is_custom' => 'setIsCustom',
        'name' => 'setName',
        'name_english' => 'setNameEnglish',
        'inventory_account_number' => 'setInventoryAccountNumber',
        'inventory_account_use_cost_center' => 'setInventoryAccountUseCostCenter',
        'depreciation_asset_account_number' => 'setDepreciationAssetAccountNumber',
        'depreciation_asset_account_use_cost_center' => 'setDepreciationAssetAccountUseCostCenter',
        'depreciation_result_account_number' => 'setDepreciationResultAccountNumber',
        'depreciation_result_account_use_cost_center' => 'setDepreciationResultAccountUseCostCenter',
        'capital_gain_account_number' => 'setCapitalGainAccountNumber',
        'capital_gain_account_use_cost_center' => 'setCapitalGainAccountUseCostCenter',
        'capital_loss_account_number' => 'setCapitalLossAccountNumber',
        'capital_loss_account_use_cost_center' => 'setCapitalLossAccountUseCostCenter',
        'taxation_depreciation' => 'setTaxationDepreciation',
        'appreciations_account_number' => 'setAppreciationsAccountNumber',
        'appreciation_account_use_cost_center' => 'setAppreciationAccountUseCostCenter',
        'accumulated_impairment_loss_account_number' => 'setAccumulatedImpairmentLossAccountNumber',
        'accumulated_impairment_loss_account_use_cost_center' => 'setAccumulatedImpairmentLossAccountUseCostCenter',
        'impairment_loss_account_number' => 'setImpairmentLossAccountNumber',
        'impairment_loss_account_use_cost_center' => 'setImpairmentLossAccountUseCostCenter',
        'reversal_of_impairment_account_number' => 'setReversalOfImpairmentAccountNumber',
        'reversal_of_impairment_account_use_cost_center' => 'setReversalOfImpairmentAccountUseCostCenter'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'active' => 'getActive',
        'no_depreciations' => 'getNoDepreciations',
        'is_custom' => 'getIsCustom',
        'name' => 'getName',
        'name_english' => 'getNameEnglish',
        'inventory_account_number' => 'getInventoryAccountNumber',
        'inventory_account_use_cost_center' => 'getInventoryAccountUseCostCenter',
        'depreciation_asset_account_number' => 'getDepreciationAssetAccountNumber',
        'depreciation_asset_account_use_cost_center' => 'getDepreciationAssetAccountUseCostCenter',
        'depreciation_result_account_number' => 'getDepreciationResultAccountNumber',
        'depreciation_result_account_use_cost_center' => 'getDepreciationResultAccountUseCostCenter',
        'capital_gain_account_number' => 'getCapitalGainAccountNumber',
        'capital_gain_account_use_cost_center' => 'getCapitalGainAccountUseCostCenter',
        'capital_loss_account_number' => 'getCapitalLossAccountNumber',
        'capital_loss_account_use_cost_center' => 'getCapitalLossAccountUseCostCenter',
        'taxation_depreciation' => 'getTaxationDepreciation',
        'appreciations_account_number' => 'getAppreciationsAccountNumber',
        'appreciation_account_use_cost_center' => 'getAppreciationAccountUseCostCenter',
        'accumulated_impairment_loss_account_number' => 'getAccumulatedImpairmentLossAccountNumber',
        'accumulated_impairment_loss_account_use_cost_center' => 'getAccumulatedImpairmentLossAccountUseCostCenter',
        'impairment_loss_account_number' => 'getImpairmentLossAccountNumber',
        'impairment_loss_account_use_cost_center' => 'getImpairmentLossAccountUseCostCenter',
        'reversal_of_impairment_account_number' => 'getReversalOfImpairmentAccountNumber',
        'reversal_of_impairment_account_use_cost_center' => 'getReversalOfImpairmentAccountUseCostCenter'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['active'] = isset($data['active']) ? $data['active'] : null;
        $this->container['no_depreciations'] = isset($data['no_depreciations']) ? $data['no_depreciations'] : null;
        $this->container['is_custom'] = isset($data['is_custom']) ? $data['is_custom'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['name_english'] = isset($data['name_english']) ? $data['name_english'] : null;
        $this->container['inventory_account_number'] = isset($data['inventory_account_number']) ? $data['inventory_account_number'] : null;
        $this->container['inventory_account_use_cost_center'] = isset($data['inventory_account_use_cost_center']) ? $data['inventory_account_use_cost_center'] : null;
        $this->container['depreciation_asset_account_number'] = isset($data['depreciation_asset_account_number']) ? $data['depreciation_asset_account_number'] : null;
        $this->container['depreciation_asset_account_use_cost_center'] = isset($data['depreciation_asset_account_use_cost_center']) ? $data['depreciation_asset_account_use_cost_center'] : null;
        $this->container['depreciation_result_account_number'] = isset($data['depreciation_result_account_number']) ? $data['depreciation_result_account_number'] : null;
        $this->container['depreciation_result_account_use_cost_center'] = isset($data['depreciation_result_account_use_cost_center']) ? $data['depreciation_result_account_use_cost_center'] : null;
        $this->container['capital_gain_account_number'] = isset($data['capital_gain_account_number']) ? $data['capital_gain_account_number'] : null;
        $this->container['capital_gain_account_use_cost_center'] = isset($data['capital_gain_account_use_cost_center']) ? $data['capital_gain_account_use_cost_center'] : null;
        $this->container['capital_loss_account_number'] = isset($data['capital_loss_account_number']) ? $data['capital_loss_account_number'] : null;
        $this->container['capital_loss_account_use_cost_center'] = isset($data['capital_loss_account_use_cost_center']) ? $data['capital_loss_account_use_cost_center'] : null;
        $this->container['taxation_depreciation'] = isset($data['taxation_depreciation']) ? $data['taxation_depreciation'] : null;
        $this->container['appreciations_account_number'] = isset($data['appreciations_account_number']) ? $data['appreciations_account_number'] : null;
        $this->container['appreciation_account_use_cost_center'] = isset($data['appreciation_account_use_cost_center']) ? $data['appreciation_account_use_cost_center'] : null;
        $this->container['accumulated_impairment_loss_account_number'] = isset($data['accumulated_impairment_loss_account_number']) ? $data['accumulated_impairment_loss_account_number'] : null;
        $this->container['accumulated_impairment_loss_account_use_cost_center'] = isset($data['accumulated_impairment_loss_account_use_cost_center']) ? $data['accumulated_impairment_loss_account_use_cost_center'] : null;
        $this->container['impairment_loss_account_number'] = isset($data['impairment_loss_account_number']) ? $data['impairment_loss_account_number'] : null;
        $this->container['impairment_loss_account_use_cost_center'] = isset($data['impairment_loss_account_use_cost_center']) ? $data['impairment_loss_account_use_cost_center'] : null;
        $this->container['reversal_of_impairment_account_number'] = isset($data['reversal_of_impairment_account_number']) ? $data['reversal_of_impairment_account_number'] : null;
        $this->container['reversal_of_impairment_account_use_cost_center'] = isset($data['reversal_of_impairment_account_use_cost_center']) ? $data['reversal_of_impairment_account_use_cost_center'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets active
     *
     * @return bool
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param bool $active active
     *
     * @return $this
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets no_depreciations
     *
     * @return bool
     */
    public function getNoDepreciations()
    {
        return $this->container['no_depreciations'];
    }

    /**
     * Sets no_depreciations
     *
     * @param bool $no_depreciations no_depreciations
     *
     * @return $this
     */
    public function setNoDepreciations($no_depreciations)
    {
        $this->container['no_depreciations'] = $no_depreciations;

        return $this;
    }

    /**
     * Gets is_custom
     *
     * @return bool
     */
    public function getIsCustom()
    {
        return $this->container['is_custom'];
    }

    /**
     * Sets is_custom
     *
     * @param bool $is_custom is_custom
     *
     * @return $this
     */
    public function setIsCustom($is_custom)
    {
        $this->container['is_custom'] = $is_custom;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets name_english
     *
     * @return string
     */
    public function getNameEnglish()
    {
        return $this->container['name_english'];
    }

    /**
     * Sets name_english
     *
     * @param string $name_english name_english
     *
     * @return $this
     */
    public function setNameEnglish($name_english)
    {
        $this->container['name_english'] = $name_english;

        return $this;
    }

    /**
     * Gets inventory_account_number
     *
     * @return int
     */
    public function getInventoryAccountNumber()
    {
        return $this->container['inventory_account_number'];
    }

    /**
     * Sets inventory_account_number
     *
     * @param int $inventory_account_number inventory_account_number
     *
     * @return $this
     */
    public function setInventoryAccountNumber($inventory_account_number)
    {
        $this->container['inventory_account_number'] = $inventory_account_number;

        return $this;
    }

    /**
     * Gets inventory_account_use_cost_center
     *
     * @return bool
     */
    public function getInventoryAccountUseCostCenter()
    {
        return $this->container['inventory_account_use_cost_center'];
    }

    /**
     * Sets inventory_account_use_cost_center
     *
     * @param bool $inventory_account_use_cost_center inventory_account_use_cost_center
     *
     * @return $this
     */
    public function setInventoryAccountUseCostCenter($inventory_account_use_cost_center)
    {
        $this->container['inventory_account_use_cost_center'] = $inventory_account_use_cost_center;

        return $this;
    }

    /**
     * Gets depreciation_asset_account_number
     *
     * @return int
     */
    public function getDepreciationAssetAccountNumber()
    {
        return $this->container['depreciation_asset_account_number'];
    }

    /**
     * Sets depreciation_asset_account_number
     *
     * @param int $depreciation_asset_account_number depreciation_asset_account_number
     *
     * @return $this
     */
    public function setDepreciationAssetAccountNumber($depreciation_asset_account_number)
    {
        $this->container['depreciation_asset_account_number'] = $depreciation_asset_account_number;

        return $this;
    }

    /**
     * Gets depreciation_asset_account_use_cost_center
     *
     * @return bool
     */
    public function getDepreciationAssetAccountUseCostCenter()
    {
        return $this->container['depreciation_asset_account_use_cost_center'];
    }

    /**
     * Sets depreciation_asset_account_use_cost_center
     *
     * @param bool $depreciation_asset_account_use_cost_center depreciation_asset_account_use_cost_center
     *
     * @return $this
     */
    public function setDepreciationAssetAccountUseCostCenter($depreciation_asset_account_use_cost_center)
    {
        $this->container['depreciation_asset_account_use_cost_center'] = $depreciation_asset_account_use_cost_center;

        return $this;
    }

    /**
     * Gets depreciation_result_account_number
     *
     * @return int
     */
    public function getDepreciationResultAccountNumber()
    {
        return $this->container['depreciation_result_account_number'];
    }

    /**
     * Sets depreciation_result_account_number
     *
     * @param int $depreciation_result_account_number depreciation_result_account_number
     *
     * @return $this
     */
    public function setDepreciationResultAccountNumber($depreciation_result_account_number)
    {
        $this->container['depreciation_result_account_number'] = $depreciation_result_account_number;

        return $this;
    }

    /**
     * Gets depreciation_result_account_use_cost_center
     *
     * @return bool
     */
    public function getDepreciationResultAccountUseCostCenter()
    {
        return $this->container['depreciation_result_account_use_cost_center'];
    }

    /**
     * Sets depreciation_result_account_use_cost_center
     *
     * @param bool $depreciation_result_account_use_cost_center depreciation_result_account_use_cost_center
     *
     * @return $this
     */
    public function setDepreciationResultAccountUseCostCenter($depreciation_result_account_use_cost_center)
    {
        $this->container['depreciation_result_account_use_cost_center'] = $depreciation_result_account_use_cost_center;

        return $this;
    }

    /**
     * Gets capital_gain_account_number
     *
     * @return int
     */
    public function getCapitalGainAccountNumber()
    {
        return $this->container['capital_gain_account_number'];
    }

    /**
     * Sets capital_gain_account_number
     *
     * @param int $capital_gain_account_number capital_gain_account_number
     *
     * @return $this
     */
    public function setCapitalGainAccountNumber($capital_gain_account_number)
    {
        $this->container['capital_gain_account_number'] = $capital_gain_account_number;

        return $this;
    }

    /**
     * Gets capital_gain_account_use_cost_center
     *
     * @return bool
     */
    public function getCapitalGainAccountUseCostCenter()
    {
        return $this->container['capital_gain_account_use_cost_center'];
    }

    /**
     * Sets capital_gain_account_use_cost_center
     *
     * @param bool $capital_gain_account_use_cost_center capital_gain_account_use_cost_center
     *
     * @return $this
     */
    public function setCapitalGainAccountUseCostCenter($capital_gain_account_use_cost_center)
    {
        $this->container['capital_gain_account_use_cost_center'] = $capital_gain_account_use_cost_center;

        return $this;
    }

    /**
     * Gets capital_loss_account_number
     *
     * @return int
     */
    public function getCapitalLossAccountNumber()
    {
        return $this->container['capital_loss_account_number'];
    }

    /**
     * Sets capital_loss_account_number
     *
     * @param int $capital_loss_account_number capital_loss_account_number
     *
     * @return $this
     */
    public function setCapitalLossAccountNumber($capital_loss_account_number)
    {
        $this->container['capital_loss_account_number'] = $capital_loss_account_number;

        return $this;
    }

    /**
     * Gets capital_loss_account_use_cost_center
     *
     * @return bool
     */
    public function getCapitalLossAccountUseCostCenter()
    {
        return $this->container['capital_loss_account_use_cost_center'];
    }

    /**
     * Sets capital_loss_account_use_cost_center
     *
     * @param bool $capital_loss_account_use_cost_center capital_loss_account_use_cost_center
     *
     * @return $this
     */
    public function setCapitalLossAccountUseCostCenter($capital_loss_account_use_cost_center)
    {
        $this->container['capital_loss_account_use_cost_center'] = $capital_loss_account_use_cost_center;

        return $this;
    }

    /**
     * Gets taxation_depreciation
     *
     * @return string
     */
    public function getTaxationDepreciation()
    {
        return $this->container['taxation_depreciation'];
    }

    /**
     * Sets taxation_depreciation
     *
     * @param string $taxation_depreciation taxation_depreciation
     *
     * @return $this
     */
    public function setTaxationDepreciation($taxation_depreciation)
    {
        $this->container['taxation_depreciation'] = $taxation_depreciation;

        return $this;
    }

    /**
     * Gets appreciations_account_number
     *
     * @return int
     */
    public function getAppreciationsAccountNumber()
    {
        return $this->container['appreciations_account_number'];
    }

    /**
     * Sets appreciations_account_number
     *
     * @param int $appreciations_account_number appreciations_account_number
     *
     * @return $this
     */
    public function setAppreciationsAccountNumber($appreciations_account_number)
    {
        $this->container['appreciations_account_number'] = $appreciations_account_number;

        return $this;
    }

    /**
     * Gets appreciation_account_use_cost_center
     *
     * @return bool
     */
    public function getAppreciationAccountUseCostCenter()
    {
        return $this->container['appreciation_account_use_cost_center'];
    }

    /**
     * Sets appreciation_account_use_cost_center
     *
     * @param bool $appreciation_account_use_cost_center appreciation_account_use_cost_center
     *
     * @return $this
     */
    public function setAppreciationAccountUseCostCenter($appreciation_account_use_cost_center)
    {
        $this->container['appreciation_account_use_cost_center'] = $appreciation_account_use_cost_center;

        return $this;
    }

    /**
     * Gets accumulated_impairment_loss_account_number
     *
     * @return int
     */
    public function getAccumulatedImpairmentLossAccountNumber()
    {
        return $this->container['accumulated_impairment_loss_account_number'];
    }

    /**
     * Sets accumulated_impairment_loss_account_number
     *
     * @param int $accumulated_impairment_loss_account_number accumulated_impairment_loss_account_number
     *
     * @return $this
     */
    public function setAccumulatedImpairmentLossAccountNumber($accumulated_impairment_loss_account_number)
    {
        $this->container['accumulated_impairment_loss_account_number'] = $accumulated_impairment_loss_account_number;

        return $this;
    }

    /**
     * Gets accumulated_impairment_loss_account_use_cost_center
     *
     * @return bool
     */
    public function getAccumulatedImpairmentLossAccountUseCostCenter()
    {
        return $this->container['accumulated_impairment_loss_account_use_cost_center'];
    }

    /**
     * Sets accumulated_impairment_loss_account_use_cost_center
     *
     * @param bool $accumulated_impairment_loss_account_use_cost_center accumulated_impairment_loss_account_use_cost_center
     *
     * @return $this
     */
    public function setAccumulatedImpairmentLossAccountUseCostCenter($accumulated_impairment_loss_account_use_cost_center)
    {
        $this->container['accumulated_impairment_loss_account_use_cost_center'] = $accumulated_impairment_loss_account_use_cost_center;

        return $this;
    }

    /**
     * Gets impairment_loss_account_number
     *
     * @return int
     */
    public function getImpairmentLossAccountNumber()
    {
        return $this->container['impairment_loss_account_number'];
    }

    /**
     * Sets impairment_loss_account_number
     *
     * @param int $impairment_loss_account_number impairment_loss_account_number
     *
     * @return $this
     */
    public function setImpairmentLossAccountNumber($impairment_loss_account_number)
    {
        $this->container['impairment_loss_account_number'] = $impairment_loss_account_number;

        return $this;
    }

    /**
     * Gets impairment_loss_account_use_cost_center
     *
     * @return bool
     */
    public function getImpairmentLossAccountUseCostCenter()
    {
        return $this->container['impairment_loss_account_use_cost_center'];
    }

    /**
     * Sets impairment_loss_account_use_cost_center
     *
     * @param bool $impairment_loss_account_use_cost_center impairment_loss_account_use_cost_center
     *
     * @return $this
     */
    public function setImpairmentLossAccountUseCostCenter($impairment_loss_account_use_cost_center)
    {
        $this->container['impairment_loss_account_use_cost_center'] = $impairment_loss_account_use_cost_center;

        return $this;
    }

    /**
     * Gets reversal_of_impairment_account_number
     *
     * @return int
     */
    public function getReversalOfImpairmentAccountNumber()
    {
        return $this->container['reversal_of_impairment_account_number'];
    }

    /**
     * Sets reversal_of_impairment_account_number
     *
     * @param int $reversal_of_impairment_account_number reversal_of_impairment_account_number
     *
     * @return $this
     */
    public function setReversalOfImpairmentAccountNumber($reversal_of_impairment_account_number)
    {
        $this->container['reversal_of_impairment_account_number'] = $reversal_of_impairment_account_number;

        return $this;
    }

    /**
     * Gets reversal_of_impairment_account_use_cost_center
     *
     * @return bool
     */
    public function getReversalOfImpairmentAccountUseCostCenter()
    {
        return $this->container['reversal_of_impairment_account_use_cost_center'];
    }

    /**
     * Sets reversal_of_impairment_account_use_cost_center
     *
     * @param bool $reversal_of_impairment_account_use_cost_center reversal_of_impairment_account_use_cost_center
     *
     * @return $this
     */
    public function setReversalOfImpairmentAccountUseCostCenter($reversal_of_impairment_account_use_cost_center)
    {
        $this->container['reversal_of_impairment_account_use_cost_center'] = $reversal_of_impairment_account_use_cost_center;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


